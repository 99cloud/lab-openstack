---

# - name: Delete before installtaion snapshot
#   shell: "virsh list --all | grep -P '^\\s+[\\d\\-]+\\s+' | awk '{print $2}' | xargs -i virsh snapshot-delete {} --snapshotname {}.before"
#   ignore_errors: yes

# virsh list --all | grep -P '^\s*[\d\-]+\s+' | awk '{print $2}' | xargs -i virsh snapshot-revert {} --snapshotname {}.before

# virsh list --all | grep -P '^\s*[\d\-]+\s+' | awk '{print $2}' | xargs -i virsh destroy {}
# virsh list --all | grep -P '^\s+[\d\-]+\s+' | awk '{print $2}' | xargs -i virsh snapshot-delete {} --snapshotname {}.init
# virsh list --all | grep -P '^\s+[\d\-]+\s+' | awk '{print $2}' | xargs -i virsh snapshot-delete {} --snapshotname {}.before
# virsh list --all | grep -P '^\s*[\d\-]+\s+' | awk '{print $2}' | xargs -i virsh undefine {}

- name: Shutdown vms
  virt:
    name: "{{ hostvars[item]['hostname'] }}"
    state: shutdown
  loop: "{{ groups['nodes'] }}"

- name: Waitting for vm create
  virt:
    name: "{{ hostvars[item]['hostname'] }}"
    command: status
  register: result
  until: result.status == 'shutdown'
  loop: "{{ groups['nodes'] }}"
  retries: 128
  delay: 10

- name: Create snapshot
  shell: "virsh snapshot-create-as {{ hostvars[item]['hostname'] }} {{ hostvars[item]['hostname'] }}.{{ snapshot_postfix }}"
  ignore_errors: yes
  loop: "{{ groups['nodes'] }}"

- name: Start vms
  virt:
    name: "{{ hostvars[item]['hostname'] }}"
    state: running
  loop: "{{ groups['nodes'] }}"

- name: Waitting connect vm
  wait_for:
    host: "{{ hostvars[item]['interface1_ip'] }}"
    port: 22
    state: started
    delay: 3
    timeout: 600
  loop: "{{ groups['nodes'] }}"
