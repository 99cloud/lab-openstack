---

- name: ensure direcroty exists
  file:
    path: "{{ local_image_path | dirname }}"
    state: "directory"
    mode: "0777"

- name: Download centos iso
  get_url:
    url: "{{ remote_image_url }}"
    dest: "{{ local_image_path }}"

- name: Stopped and disable firewalld, if firewalld installed
  service:
    name: firewalld
    state: stopped
    enabled: no

# - name: Install the 'Gnome desktop' environment group
#   yum:
#     name: "@^gnome-desktop-environment"
#     state: present

- name: Check cpu acceleration
  shell: "grep -qE '(vmx|svm)' /proc/cpuinfo;echo $?"
  register: cpu_acceleration

- name: Fail if acc is not enabled and supported
  fail:
    msg: "acc is not enabled and supported"
  when: cpu_acceleration.stdout != "0"

- name: Install kvm
  yum:
    name:
      - qemu-kvm
      - qemu-img
      - virt-manager
      - libvirt
      - libvirt-python
      - libvirt-client
      - virt-install
      - virt-viewer
      - bridge-utils
      - iptables-services
      - NetworkManager

- name: Start and enable service iptables
  service:
    name: iptables
    enabled: yes
    state: started

- name: Start and enable libvirtd
  service:
    name: libvirtd
    state: started
    enabled: yes

- name: Create vm folder
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ vm_system_path }}"
    - "{{ vmdisk_path }}"

- name: Enable ip forward function
  shell: "echo 1 > /proc/sys/net/ipv4/ip_forward"

- name: "cmd: ip link show type bridge"
  shell: "ip link show type bridge"
  register: check_result

- name: "Dump check_result.stdout_lines"
  debug:
    msg: "{{ check_result.stdout_lines }}"

- name: Add linux bridge
  command: "ip link add {{ item }} type bridge"
  when: "item not in check_result.stdout"
  loop:
    - "br-mgt"
    - "br-pod"
    - "br-ext"
    - "br-str"

- name: Install bridge configure file
  template:
    src: "{{ item }}"
    dest: /etc/sysconfig/network-scripts/{{ item }}
  loop:
    - ifcfg-br-ext
    - ifcfg-br-mgt
    - ifcfg-br-pod
    - ifcfg-br-str

- name: Restart NetworkManager
  service:
    name: NetworkManager
    state: restarted

- name: Create config file for linux bridge
  shell: "ifup {{ item }}"
  loop:
    - br-ext
    - br-mgt
    - br-pod
    - br-str

- name: Copy disk-config.sh
  template:
    src: disk-config.j2
    dest: /tmp/disk-config.sh
    mode: 755

- name: Create vm disk
  shell: /tmp/disk-config.sh

- name: iptables flush filter
  iptables:
    chain: "{{ item }}"
    flush: yes
  loop:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]

- name: iptables flush nat
  iptables:
    table: nat
    chain: '{{ item }}'
    flush: yes
  loop: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]

- name: Add nat rule for iptables
  iptables:
    table: nat
    chain: POSTROUTING
    source: "{{ item }}"
    jump: MASQUERADE
    out_interface: "{{ bastion_node_interface1_name }}"
  loop:
    - "{{ network_prefix_mgt }}.0/24"
    - "{{ network_prefix_pod }}.0/24"

- name: "Forward management port to openstack-host - DNAT"
  iptables:
    table: nat
    chain: PREROUTING
    destination: "{{ public_ip }}"
    protocol: tcp
    destination_port: "{{ item.export }}"
    jump: DNAT
    to_destination: "{{ internal_ssh_ip }}:{{ item.origin }}"
  loop:
    - {'origin': "22", 'export': "{{ internal_ssh_port }}"}
    - {'origin': "5901", 'export': "8901"}
    - {'origin': "5902", 'export': "8902"}
    - {'origin': "5903", 'export': "8903"}

- name: "Forward management port to openstack-host - SNAT"
  iptables:
    table: nat
    chain: POSTROUTING
    destination: "{{ internal_ssh_ip }}"
    protocol: tcp
    destination_port: "{{ item }}"
    jump: SNAT
    to_source: "{{ network_prefix_ext }}.1"
  loop:
    - "22"
    - "5901"
    - "5902"
    - "5903"

- name: "Forward web port to openstack-host - DNAT"
  iptables:
    table: nat
    chain: PREROUTING
    destination: "{{ public_ip }}"
    protocol: tcp
    destination_port: "{{ item }}"
    jump: DNAT
    to_destination: "{{ openstack_internal_vip_address }}:{{ item }}"
  loop:
    - "80"
    - "443"
    - "5000"
    - "6080"
    - "8000"
    - "8004"
    - "8774"
    - "8776"
    - "8780"
    - "9292"
    - "9696"
    - "35357"

- name: "Forward web port to openstack-host - SNAT"
  iptables:
    table: nat
    chain: POSTROUTING
    destination: "{{ openstack_internal_vip_address }}"
    protocol: tcp
    destination_port: "{{ item }}"
    jump: SNAT
    to_source: "{{ network_prefix_mgt }}.1"
  loop:
    - "80"
    - "443"
    - "5000"
    - "6080"
    - "8000"
    - "8004"
    - "8774"
    - "8776"
    - "8780"
    - "9292"
    - "9696"
    - "35357"

- name: Save iptables
  shell: service iptables save

- name: Flush iptables
  shell: iptables --flush

# https://www.linuxtechi.com/enable-nested-virtualization-kvm-centos-7-rhel-7/
- name: Touch /etc/modprobe.d/kvm-nested.conf
  copy:
    src: "kvm-nested.conf"
    dest: "/etc/modprobe.d/kvm-nested.conf"

- name: Enable KVM nested
  shell: "modprobe -r kvm_intel && modprobe -a kvm_intel"
  ignore_errors: yes
